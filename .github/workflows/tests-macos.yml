name: Tests (MacOS)
on: [push]

jobs:
  test:
    name: Tests
    strategy:
      matrix:
        os:
          - macOS-latest
          - macOs-13
          - macOs-14
          #- macOs-15
        dc:
          - ldc-latest
          - ldc-1.40.1
        buildConf:
          # Currently, static build does not work on macos, because it does not know where to find libpq
          # - Static
          - Dynamic
        include:
          - os: macOs-15
            dc: ldc-1.41.0-beta1
            buildConf: Dynamic

    # Provide the password for postgres
    env:
      POSTGRES_USER: peque
      POSTGRES_PASSWORD: peque
      POSTGRES_DB: peque-test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v2
        with:
          compiler: ${{ matrix.dc }}

      - name: Start PostgreSQL on MacOS
        run: |
          brew install libpq
          brew install postgresql@14
          brew services start postgresql
          echo 'Check PostgreSQL service is running'
          i=10
          while [ $i -gt 0 ]; do
              echo 'Check PostgreSQL service status'
              pg_isready && break
              ((i--))
              if [ $i == 0 ]; then
                  echo 'PostgreSQL service not ready, all attempts exhausted'
                  exit 1
              fi
              echo 'PostgreSQL service not ready, wait 5 more sec, attempts left: $i'
              sleep 5
          done

      # Homebrew creates an account with the same name as the installing user, but no password
      - name: Create postgresql user
        env:
          PGHOST: localhost
          PGPORT: 5432
        run: |
          psql postgres -c "CREATE USER $POSTGRES_USER WITH PASSWORD '$POSTGRES_PASSWORD'"

      - name: Create postgresql database
        env:
          PGHOST: localhost
          PGPORT: 5432
        run: |
          psql postgres -c "CREATE DATABASE \"$POSTGRES_DB\" ENCODING 'unicode'"

      - name: Run tests
        run: dub test -b unittest-cov -c "unittest${{ matrix.buildConf }}"
